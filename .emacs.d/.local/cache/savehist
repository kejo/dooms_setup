;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(coding-system-history counsel-describe-symbol-history ivy-history evil-ex-search-history counsel-M-x-history evil-ex-history file-name-history))
(setq coding-system-history '(#("utf-8-unix" 0 10 (ivy-index 23 idx 872))))
(setq ivy-history '(#("doom-solarized-dark" 0 19 (ivy-index 35)) #("doom-one" 0 8 (ivy-index 27)) #("doom-henna" 0 10 (ivy-index 11)) #("doom-dark+" 0 10 (ivy-index 5)) #("doom-monokai-pro" 0 16 (ivy-index 18)) #("doom-spacegrey" 0 14 (ivy-index 38)) #("deeper-blue" 0 11 (ivy-index 45)) #("doom-palenight" 0 14 (ivy-index 31)) #("doom-molokai" 0 12 (ivy-index 16)) #("doom-material" 0 13 (ivy-index 15)) #("~/.doom.d/config.el" 0 19 (ivy-index 3)) #("~/projects/notes/personal.org" 0 29 (ivy-index 5)) #("~/.doom.d/init.el" 0 17 (ivy-index 2)) #("/tmp/test.pl" 0 12 (ivy-index 4)) #("sh (default)" 0 12 (ivy-index 0))))
(setq evil-ex-search-history '("perl" "i" "unicode" "perl"))
(setq counsel-M-x-history '(#("theme" 0 5 (ivy-index 0)) #("load-theme" 0 10 (ivy-index 0)) #("them" 0 4 (ivy-index 0)) #("evil-tu" 0 7 (ivy-index 0)) "evil-tutor-start"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("$" 0 1 (ex-index 1)) #("0" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("0" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("0" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("$" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("0" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("$" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("$" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("qa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e /tmp/test.pl" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1))))
(setq file-name-history '(#("/home/ketan/.doom.d/config.el" 0 29 (ivy-index 2)) #("/tmp/test.pl" 0 12 (ivy-index 0)) #("/home/ketan/projects/" 0 21 (ivy-index 0)) #("/home/ketan/projects/notes/personal.org" 0 39 (ivy-index 0)) #("/home/ketan/.doom.d/" 0 20 (ivy-index 0)) #("/home/ketan/.emacs.d/" 0 21 (ivy-index 0))))
(setq evil-jumps-history 'nil)
(setq counsel-compile-history 'nil)
(setq kill-ring '("john@doe.com" "John Doe" "t" "/" "org" "john@doe.com" "John Doe" ";; (add-hook 'term-exec-hook
;;           (function
;;            (lambda ()
;;              (set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix)
;;              (set-terminal-coding-system 'utf-8-unix)
;;              (setq default-process-coding-system '(utf-8-unix . utf-i-unix)))))

;; (defadvice ansi-term (after advise-ansi-term-coding-system)
;;   (set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix)
;;   (set-terminal-coding-system 'utf-8-unix)
;;   (setq default-process-coding-system '(utf-8-unix . utf-8-unix))
;;   )
;; (ad-activate 'ansi-term)

" "(set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix)
" ";" ";" ";
;
;
;
;
;" "(add-hook 'term-exec-hook
          (function
           (lambda ()
             (set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix))))" "(set-terminal-coding-system 'utf-8-unix)
(setq default-process-coding-system '(utf-8-unix . utf-8-unix))
" "(setq default-process-coding-system '(utf-8-unix . utf-8-unix))" "(set-terminal-coding-system 'utf-8-unix)" "(set-terminal-coding-system 'utf-8-unix)" "(defadvice ansi-term (after advise-ansi-term-coding-system)
    (set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix))
(ad-activate 'ansi-term)" "(set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix)" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";"))
(setq mark-ring 'nil)
(setq global-mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
